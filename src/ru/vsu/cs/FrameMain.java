package ru.vsu.cs;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class FrameMain extends JFrame { //те наш класс наследуется от JFrame
    // JFrame - компонент swing-а
    private JTextField textFieldA; // с J это всё типы
    private JPanel panelMain;
    private JTextField textFieldB;
    private JTextField textFieldC;
    private JButton buttonCalc;
    private JCheckBox checkBox1;
    private JPasswordField passwordField1;

    //Конструктор:
    public FrameMain() {

        // тут выполняется код по созданию формы уже а потом мы меняем

        this.setTitle("Calc"); // зоголовок окна
        this.setContentPane(panelMain);   // главная - панель мейн
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);  // опреация, когда мы закрываем кнопочку окна - завершение проги
        this.pack(); //метод пак - правильным образом расстваит компоненты

        // Create Listener  or Go to Listener
        // это называется анонимным классом
        buttonCalc.addActionListener(new ActionListener() {  //ActionListener - класс, который отвечает за обработчики событий
            @Override
            public void actionPerformed(ActionEvent e) {
                //тут будем писать код обработки событий
                try {
                    double a = Double.parseDouble(textFieldA.getText());
                    double b = Double.parseDouble(textFieldB.getText());
                    double c = sum(a, b);
                    textFieldC.setText(String.format("%s", c));
                } catch (Exception err) {
                    JOptionPane.showMessageDialog(null, "Некорректный данные", "Ошибка", JOptionPane.ERROR_MESSAGE);
                }
            } //ЛОГИКУ В ОБРАБОТЧИК СОБЫТИЙ НЕ ПИСАТЬ
        });

    }

    //Компоновщики - размещают компоненты внутри контейнера
    private static double sum(double a, double b) {     //Логика
        // Обычно логика пишется в др классах
        return a + b;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panelMain = new JPanel();
        panelMain.setLayout(new GridLayoutManager(3, 6, new Insets(8, 8, 8, 8), 8, 8));
        panelMain.setBackground(new Color(-4005907));
        textFieldA = new JTextField();
        panelMain.add(textFieldA, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final Spacer spacer1 = new Spacer();
        panelMain.add(spacer1, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(-1, 50), null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("+");
        panelMain.add(label1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textFieldB = new JTextField();
        panelMain.add(textFieldB, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("=");
        panelMain.add(label2, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textFieldC = new JTextField();
        textFieldC.setEditable(false);
        textFieldC.setEnabled(true);
        panelMain.add(textFieldC, new GridConstraints(0, 4, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(105, 30), null, 0, false));
        final Spacer spacer2 = new Spacer();
        panelMain.add(spacer2, new GridConstraints(0, 5, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, 1, new Dimension(60, 60), null, null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        panelMain.add(panel1, new GridConstraints(1, 0, 1, 6, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        buttonCalc = new JButton();
        buttonCalc.setText("Сложить");
        panel1.add(buttonCalc, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, new Dimension(200, 200), 0, false));
        final Spacer spacer3 = new Spacer();
        panel1.add(spacer3, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        checkBox1 = new JCheckBox();
        checkBox1.setText("CheckBox");
        panel1.add(checkBox1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        passwordField1 = new JPasswordField();
        panel1.add(passwordField1, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panelMain;
    }

}
